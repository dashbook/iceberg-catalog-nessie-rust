/*
 * Nessie API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.65.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MergeKeyBehavior {
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<Box<crate::models::ContentKey>>,
    #[serde(rename = "mergeBehavior", skip_serializing_if = "Option::is_none")]
    pub merge_behavior: Option<crate::models::MergeBehavior>,
    #[serde(rename = "expectedTargetContent", skip_serializing_if = "Option::is_none")]
    pub expected_target_content: Option<Box<crate::models::Content>>,
    #[serde(rename = "resolvedContent", skip_serializing_if = "Option::is_none")]
    pub resolved_content: Option<Box<crate::models::Content>>,
    #[serde(rename = "expectedTargetDocumentation", skip_serializing_if = "Option::is_none")]
    pub expected_target_documentation: Option<Box<crate::models::Documentation>>,
    #[serde(rename = "resolvedDocumentation", skip_serializing_if = "Option::is_none")]
    pub resolved_documentation: Option<Box<crate::models::Documentation>>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Vec<crate::models::ContentMetadata>>,
}

impl MergeKeyBehavior {
    pub fn new() -> MergeKeyBehavior {
        MergeKeyBehavior {
            key: None,
            merge_behavior: None,
            expected_target_content: None,
            resolved_content: None,
            expected_target_documentation: None,
            resolved_documentation: None,
            metadata: None,
        }
    }
}


