/*
 * Nessie API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.65.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GarbageCollectorConfigV2 {
    /// The default cutoff policy. Policies can be one of: - number of commits as an integer value - a duration (see java.time.Duration) - an ISO instant - 'NONE', means everything's considered as live
    #[serde(rename = "defaultCutoffPolicy", skip_serializing_if = "Option::is_none")]
    pub default_cutoff_policy: Option<String>,
    #[serde(rename = "perRefCutoffPolicies", skip_serializing_if = "Option::is_none")]
    pub per_ref_cutoff_policies: Option<Vec<crate::models::ReferenceCutoffPolicyV2>>,
    /// Files that have been created after 'gc-start-time - new-files-grace-period' are not being deleted.
    #[serde(rename = "newFilesGracePeriod", skip_serializing_if = "Option::is_none")]
    pub new_files_grace_period: Option<String>,
    #[serde(rename = "expectedFileCountPerContent", skip_serializing_if = "Option::is_none")]
    pub expected_file_count_per_content: Option<i32>,
}

impl GarbageCollectorConfigV2 {
    pub fn new() -> GarbageCollectorConfigV2 {
        GarbageCollectorConfigV2 {
            default_cutoff_policy: None,
            per_ref_cutoff_policies: None,
            new_files_grace_period: None,
            expected_file_count_per_content: None,
        }
    }
}


